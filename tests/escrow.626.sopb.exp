

@compiler >=8
payable main contract Escrow =
    record state = {
        
            buyer : address,
            payee : address,
            agent : address,
            amount : int,
            service_fee : int
        }
    entrypoint init(payee : address, agent : address, service_fee : int) = {
            buyer = Call.caller,
            payee = payee,
            agent = agent,
            amount = Call.value,
            service_fee = service_fee
        }
    


    function permit(authorized : address) =
        require(Call.caller == authorized, "access")


    stateful function transfer(to : address, amount : int) =
        Chain.spend(to, amount)


    stateful entrypoint pay_out() =
        permit(state.agent)
        transfer(state.agent, state.service_fee)
        transfer(state.payee, Contract.balance)


    stateful entrypoint pay_back() =
        permit(state.agent)
        transfer(state.agent, state.service_fee)
        transfer(state.buyer, Contract.balance)