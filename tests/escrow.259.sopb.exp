

@compiler >=8
payable main contract Escrow =
    record state = {
        
            payer : address,
            payee : address,
            arbiter : address,
            amount : int,
            fee : int
        }
    entrypoint init(payee : address, arbiter : address, fee : int) = {
            payer = Call.caller,
            payee = payee,
            arbiter = arbiter,
            amount = Call.value,
            fee = fee
        }
    


    function permit(authorized : address) =
        require(Call.caller == authorized, "access")


    stateful function transfer(to : address, amount : int) =
        Chain.spend(to, amount)


    stateful entrypoint pay_out() =
        permit(state.arbiter)
        transfer(state.arbiter, state.fee)
        transfer(state.payee, Contract.balance)


    stateful entrypoint pay_back() =
        permit(state.arbiter)
        transfer(state.arbiter, state.fee)
        transfer(state.payer, Contract.balance)