

@compiler >=6

main contract Escrow =

    record state = {
            payer : address,
            seller : address,
            agent : address,
            service_fee : int
        }

    payable entrypoint init(seller : address, agent : address, service_fee : int) = {
            payer = Call.caller,
            seller = seller,
            agent = agent,
            service_fee = service_fee
        }



    function permit(authorized : address) =
        require(Call.caller == authorized, "access")


    stateful function transfer(to : address, amount : int) =
        Chain.spend(to, amount)


    stateful entrypoint pay_out() =
        permit(state.agent)
        transfer(state.agent, state.service_fee)
        transfer(state.seller, Contract.balance)


    stateful entrypoint pay_back() =
        permit(state.agent)
        transfer(state.agent, state.service_fee)
        transfer(state.payer, Contract.balance)