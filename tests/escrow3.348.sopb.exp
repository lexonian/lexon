

@compiler >=8
payable main contract Escrow =
    record state = {
        
            buyer : address,
            seller : address,
            arbiter : address,
            amount : int
        }
    entrypoint init(seller : address, arbiter : address) = {
            buyer = Call.caller,
            seller = seller,
            arbiter = arbiter,
            amount = Call.value
        }
    


    function permit(authorized : address) =
        require(Call.caller == authorized, "access")


    stateful function transfer(to : address, amount : int) =
        Chain.spend(to, amount)


    stateful entrypoint pay_out() =
        permit(state.arbiter)
        transfer(state.seller, Contract.balance)


    stateful entrypoint pay_back() =
        permit(state.arbiter)
        transfer(state.buyer, Contract.balance)